<VirtualHost *:80>
    ServerName data.vlaanderen.be


    ScriptLog logs/cgi_log
    ScriptAlias "/cgi-bin/" "/scripts/"
    AddHandler cgi-script .sh

    <Directory /scripts/>
    # provide access to the local volume
	Options Indexes 
	AllowOverride None
	Require all granted
    </Directory>

    <Directory /cgi-bin/>
    # provide access to the local volume
	Options Indexes 
	AllowOverride None
	Require all granted
    </Directory>


    <Directory /www/>
    # provide access to the local volume
	Options Indexes FollowSymLinks
	AllowOverride None
	Require all granted
    </Directory>

    DocumentRoot "/www"

    # customize global error pages 
    # indien afgehandeld binnen zelfde vhost is alle benodigde informatie beschikbaar via environment variables
    ErrorDocument 404 /cgi-bin/404_error.sh
    ErrorDocument 400 /cgi-bin/400_error.sh

    RewriteEngine On
    LogLevel debug rewrite:trace5




# if not of the accepted classes then stop
# accept cgi-bin otherwise error-handling is blocked
    RewriteCond %{REQUEST_URI} !^/(id|doc|ns|cgi-bin).* 
    RewriteRule "^(.*)$" - [E=errorUriScheme:0,R=400,L]

# empty category not allowed
    RewriteCond %{REQUEST_URI} ^/(id|doc|meta|raw)$
    RewriteRule "^(.*)$" - [E=errorUriScheme:1,R=400]

    RewriteCond %{REQUEST_URI} ^/(id|doc|meta|raw)/$
    RewriteRule "^(.*)$" - [E=errorUriScheme:1,R=400,L]


# empty accept header not allowed => send possibilities
# since http 300 has an non-standard respons, we issue a 404 instead.
# Should it be a 406?
    RewriteCond "%{REQUEST_URI}" !^/cgi-bin/.* 
    RewriteCond "%{HTTP_ACCEPT}" "^$"
    RewriteRule "^(.*)$" - [E=errorUriScheme:2,R=404,L]
#   RewriteRule "^(.*)$" /cgi-bin/alternatives.sh [PT]

## client accepts anything, but we have to provide with all the possible alternatives
#    RewriteCond "%{REQUEST_URI}" !^/cgi-bin/.*
#    RewriteCond "%{HTTP_ACCEPT}" "\*/\*"
#    RewriteRule "^(.*)$" - [E=errorUriScheme:2,R=404,L]
##   RewriteRule "^(.*)$" /cgi-bin/alternatives.sh [PT]

## if non of the accept headers match then report error
#    RewriteCond "%{REQUEST_URI}" !^/cgi-bin/.*
#    RewriteCond "%{HTTP_ACCEPT}" ".*(text\/turtle|application\/rdf\+xml|text\/html|text\/turtle).*"
#    RewriteRule "^(.*)$" - [E=errorUriScheme:2,R=404,L]
 
     # order defines server preference order
     # most preferred at the bottom
     setenvif ACCEPT ".*\*/\*.*"             aformat=header_any 
     setenvif ACCEPT .*text.html.*           aformat=header_html
     setenvif ACCEPT .*application.rdf.xml.* aformat=header_rdfxml
     setenvif ACCEPT .*text.ntriples.*       aformat=header_ntriples
     setenvif ACCEPT .*text.turtle.*         aformat=header_turtle
     #LogMessage "environment variable aformat has been set to: %{reqenv:aformat}" hook=all

# accept-header table
# document format || corresponding accept-headers || corresponding extensions
# HTML || text/html || .html
# RDF  || application/rdf+xml || .rdf
# TURTLE || text/turtle || .ttl
# NTRIPLES || text/ntriples || .nt
# jsonld || text/jsonld || .jsonld

# discussion points:
#   a) all ids have a corresponding doc? (yes)
#   b) all docs have a corresponding id? (no)
#   c) for a concept url-instance1 and url-instance2 are served by the same data provider (no split) - at least for this frontend facing proxy, if split required then next layer should handle it.

# handle id case
    RewriteCond "%{REQUEST_URI}" "^/id/.*"
    RewriteCond "%{ENV:aformat}" (header_html|header_turtle|header_rdfxml|header_ntriples)
    RewriteRule "^/id/(.*)$" http://data.vlaanderen.be/doc/$1 [R=303]


# handle doc case

      # first check document extensions
      # extensions have priority over headers
    RewriteCond "%{REQUEST_URI}" "^/doc/.*.ttl"
    RewriteRule "^/doc/(.*).ttl$" http://ldsb-data.vlaanderen.be:81/doc/$1.subject_ttl [P]

    RewriteCond "%{REQUEST_URI}" "^/doc/.*.rdf"
    RewriteRule "^/doc/(.*).rdf$" http://ldsb-data.vlaanderen.be:81/doc/$1.subject_rdf [P]

    RewriteCond "%{REQUEST_URI}" "^/doc/.*.nt"
    RewriteRule "^/doc/(.*).nt$" http://ldsb-data.vlaanderen.be:81/doc/$1.subject_nt [P]

    RewriteCond "%{REQUEST_URI}" "^/doc/.*.json"
    RewriteRule "^/doc/(.*).json$" http://ldsb-data.vlaanderen.be:81/doc/$1.subject_json [P]

	# TODO: replace with proxy statement
    RewriteCond "%{REQUEST_URI}" "^/doc/.*.html"
    RewriteRule "^/doc/(.*)/(.*).html$" http://subjectpages/$1/$1-$2 [P]

      # no further processing if Accept-Header is set to RDF
    RewriteCond "%{ENV:aformat}" (header_turtle|header_rdfxml|header_ntriples|header_json)
    RewriteCond "%{REQUEST_URI}" "^/doc/.*"
    RewriteRule "^/doc/(.*)$" http://ldsb-data.vlaanderen.be:81/doc/$1.subject [P]
    #RewriteRule "^/doc/(.*)$" http://virtuoso:8890/sparql?query=describe\%20\%3chttp://data.vlaanderen.be/id/$1\%3e [P]


	# TODO: replace with proxy statement
    RewriteCond "%{ENV:aformat}" header_html 
    RewriteCond "%{REQUEST_URI}" "^/doc/.*"
    RewriteRule "^/doc/(.*)/(.*)$" http://subjectpages/$1/$1-$2 [P]
    

# handle ns case
    # root ns case
    RewriteCond "%{ENV:aformat}" header_html
    RewriteCond "%{REQUEST_URI}" "^/ns$"
    RewriteRule "^/ns" /ns/generic.html [END]

    RewriteCond "%{ENV:aformat}" header_rdf
    RewriteCond "%{REQUEST_URI}" "^/ns$"
    RewriteRule "^/ns" /ns/generic.rdf [END]

    RewriteCond "%{ENV:aformat}" header_ttl
    RewriteCond "%{REQUEST_URI}" "^/ns$"
    RewriteRule "^/ns" /ns/generic.ttl [END]

    # ontology domain specific
      # capture file endings
      # ignore the Accept-header value
    RewriteCond "%{REQUEST_URI}" "^/ns/(.+).ttl"
    RewriteRule "^/ns/(.*)$" /ns/$1 [END]

    RewriteCond "%{REQUEST_URI}" "^/ns/(.+).rdf"
    RewriteRule "^/ns/(.*)$" /ns/$1 [END]

    RewriteCond "%{REQUEST_URI}" "^/ns/(.+).html"
    RewriteRule "^/ns/(.*)$" /ns/$1 [END]

      # capture the domain
    RewriteCond "%{ENV:aformat}" header_html
    RewriteCond "%{REQUEST_URI}" "^/ns/(.+)"
    RewriteRule "^/ns/(.*)$" /ns/$1.html [END]

    RewriteCond "%{ENV:aformat}" header_rdf
    RewriteCond "%{REQUEST_URI}" "^/ns/(.+)"
    RewriteRule "^/ns/(.*)$" /ns/$1.rdf [END]

    RewriteCond "%{ENV:aformat}" header_ttl
    RewriteCond "%{REQUEST_URI}" "^/ns/(.+)"
    RewriteRule "^/ns/(.*)$" /ns/$1.ttl [END]




</VirtualHost>




#<VirtualHost *:81>
#  # handle errors on a different port 
#    ServerName data.vlaanderen.be
#
#    ScriptLog logs/cgi_log
#    ScriptAlias "/cgi-bin/" "/scripts/"
#    AddHandler cgi-script .sh
#
#    <Directory /scripts/>
#    # provide access to the local volume
#	Options Indexes 
#	AllowOverride None
#	Require all granted
#    </Directory>
#
#    <Directory /cgi-bin/>
#    # provide access to the local volume
#	Options Indexes 
#	AllowOverride None
#	Require all granted
#    </Directory>
#
#</VirtualHost>

# obsolete knowledge
    #ErrorDocument 404 /error/error.domain.html
    # indien error document start met http dan worden de environment variables niet gezet.
    #ErrorDocument 404 http://data.vlaanderen.be:81/cgi-bin/error.sh?uri=%{escape:%{HTTP_REFERER}}
#    RewriteRule "^(.*)$" /ErrorPages/error.domain.html [R=404]  
#    RewriteRule "^(.*)$" /error/error.emptytype.html [E=errorUriScheme:1,R=404]
#    RewriteRule "^/(.*)$" http://data.vlaanderen.be:81/cgi-bin/error.sh?uri=$1 [R=303]

# manage the error messages
#    RewriteCond %{REQUEST_URI} "^/error/.*" 
#    RewriteRule "^/error/(.*)" /ErrorPages/$1 [L]

#    RewriteCond "%{HTTP_ACCEPT}" "(text/html|application/rdf\+xml|text/turtle)"
#    RewriteRule "^/doc/(.*)$" http://virtuoso:8890/sparql?query=describe\ <http://data.vlaanderen.be/id/$1> [P]
#    RewriteCond "%{HTTP_ACCEPT}" "(application/rdf\+xml|text/turtle)"
    #RewriteRule "^/doc/(.*).nt$" http://virtuoso:8890/sparql?query=describe\%20\%3chttp://data.vlaanderen.be/id/$1\%3e [P]
