<VirtualHost *:80>
    ServerName data.vlaanderen.be


    ScriptLog logs/cgi_log
    ScriptAlias "/cgi-bin/" "/scripts/"
    AddHandler cgi-script .sh

    <Directory /scripts/>
    # provide access to the local volume
	Options Indexes 
	AllowOverride None
	Require all granted
    </Directory>

    <Directory /cgi-bin/>
    # provide access to the local volume
	Options Indexes 
	AllowOverride None
	Require all granted
    </Directory>


    <Directory /www/>
    # provide access to the local volume
	Options Indexes FollowSymLinks
	AllowOverride None
	Require all granted
    </Directory>

    DocumentRoot "/www"

    # customize global default 404 page 
    # indien afgehandeld binnen zelfde vhost is alle benodigde informatie beschikbaar via environment variables
    ErrorDocument 404 /cgi-bin/error.sh

    RewriteEngine On
    LogLevel alert rewrite:trace5


# if not of the accepted classes then stop
# accept cgi-bin otherwise error-handling is blocked
    RewriteCond %{REQUEST_URI} !^/(id|doc|meta|raw|ns|cgi-bin).* 
    RewriteRule "^(.*)$" - [E=errorUriScheme:0,R=404]

# empty category not allowed
    RewriteCond %{REQUEST_URI} ^/(id|doc|meta|raw)$
    RewriteRule "^(.*)$" - [E=errorUriScheme:1,R=404]

    RewriteCond %{REQUEST_URI} ^/(id|doc|meta|raw)/$
    RewriteRule "^(.*)$" - [E=errorUriScheme:1,R=404]


# empty accept header not allowed => send possibilities
# since http 300 has an non-standard respons, we issue a 404 instead.
# Should it be a 406?
    RewriteCond "%{REQUEST_URI}" !^/cgi-bin/.* 
    RewriteCond "%{HTTP_ACCEPT}" "^$"
    RewriteRule "^(.*)$" - [E=errorUriScheme:2,R=404,L]
#   RewriteRule "^(.*)$" /cgi-bin/alternatives.sh [PT]

# client accepts anything, but we have to provide with all the possible alternatives
    RewriteCond "%{REQUEST_URI}" !^/cgi-bin/.*
    RewriteCond "%{HTTP_ACCEPT}" "\*/\*"
    RewriteRule "^(.*)$" - [E=errorUriScheme:2,R=404,L]
#   RewriteRule "^(.*)$" /cgi-bin/alternatives.sh [PT]

## if non of the accept headers match then report error
#    RewriteCond "%{REQUEST_URI}" !^/cgi-bin/.*
#    RewriteCond "%{HTTP_ACCEPT}" ".*(text\/turtle|application\/rdf\+xml|text\/html|text\/turtle).*"
#    RewriteRule "^(.*)$" - [E=errorUriScheme:2,R=404,L]


# discussion points:
#   a) all ids have a corresponding doc? (yes)
#   b) all docs have a corresponding id? (no)
#   c) for a concept url-instance1 and url-instance2 are served by the same data provider (no split) - at least for this frontend facing proxy, if split required then next layer should handle it.

# handle id case
      # if Linked Data => forward to the document page
    RewriteCond "%{REQUEST_URI}" "^/id/.*"
    RewriteCond "%{HTTP_ACCEPT}" "(application/rdf\+xml|text/turtle)"
    RewriteRule "^/id/(.*)$" http://data.vlaanderen.be/doc/$1 [R=303]


	# all id's per concept have the same subject pages approach for html
    RewriteCond "%{REQUEST_URI}" "^/id/.*"
    RewriteCond "%{HTTP_ACCEPT}" "(text/html)"
    RewriteRule "^/id/(.*)$" http://id.vlaanderen.be/doc/$1 [R=303]

# handle doc case
      # no further processing if Accept-Header is set to RDF
    RewriteCond "%{REQUEST_URI}" "^/doc/.*"
    RewriteCond "%{HTTP_ACCEPT}" "(application/rdf\+xml|text/turtle)"
#    RewriteRule "^/doc/(.*)$" http://oslo-rdfstore3.westeurope.cloudapp.azure.com:8890/sparql?query=describe%20<http://id.vlaanderen.be/id/$1> [R=303,END]
#    RewriteRule "^/doc/(.*)$" http://40.68.161.29:8080/openrdf-sesame/repositories/OLSO2CRABbeta?query=describe%20%3Chttp%3A%2F%2Fdata.vlaanderen.be%2Fid%2Fstraatnaam%2F10189%3E [R=303,END]
    RewriteRule "^/doc/(.*)$" http://40.68.161.29:8080/openrdf-sesame/repositories/OLSO2CRABbeta?query=describe\ <http://data.vlaanderen.be/id/straatnaam/10189> [R=303,END]

	# this case should be managed by next proxy
    RewriteCond "%{REQUEST_URI}" "^/doc/.*"
    RewriteRule "^/doc/(.*)$" http://agiv.be/ [P] 
    


# handle ns case
    # root ns case
    RewriteCond "%{REQUEST_URI}" "^/ns$"
    RewriteCond "%{HTTP_ACCEPT}" "text/html"
    RewriteRule "^/ns" /ns/generic.html [END]

    RewriteCond "%{REQUEST_URI}" "^/ns$"
    RewriteCond "%{HTTP_ACCEPT}" "application/rdf+xml"
    RewriteRule "^/ns" /ns/generic.rdf [END]

    RewriteCond "%{REQUEST_URI}" "^/ns$"
    RewriteCond "%{HTTP_ACCEPT}" "text/turtle"
    RewriteRule "^/ns" /ns/generic.ttl [END]

    # ontology domain specific
      # capture file endings
      # ignore the Accept-header value
    RewriteCond "%{REQUEST_URI}" "^/ns/(.*).ttl"
    RewriteRule "^/ns/(.*)$" /ns/$1 [END]

    RewriteCond "%{REQUEST_URI}" "^/ns/(.*).rdf"
    RewriteRule "^/ns/(.*)$" /ns/$1 [END]

    RewriteCond "%{REQUEST_URI}" "^/ns/(.*).html"
    RewriteRule "^/ns/(.*)$" /ns/$1 [END]

      # capture the domain
    RewriteCond "%{REQUEST_URI}" "^/ns/(.*)"
    RewriteCond "%{HTTP_ACCEPT}" "text/html"
    RewriteRule "^/ns/(.*)$" /ns/$1.html [END]

    RewriteCond "%{REQUEST_URI}" "^/ns/(.*)"
    RewriteCond "%{HTTP_ACCEPT}" "application/rdf+xml"
    RewriteRule "^/ns/(.*)$" /ns/$1.rdf [END]

    RewriteCond "%{REQUEST_URI}" "^/ns/(.*)"
    RewriteCond "%{HTTP_ACCEPT}" "text/turtle"
    RewriteRule "^/ns/(.*)$" /ns/$1.ttl [END]




</VirtualHost>

<VirtualHost *:81>
  # handle errors on a different port 
    ServerName data.vlaanderen.be

    ScriptLog logs/cgi_log
    ScriptAlias "/cgi-bin/" "/scripts/"
    AddHandler cgi-script .sh

    <Directory /scripts/>
    # provide access to the local volume
	Options Indexes 
	AllowOverride None
	Require all granted
    </Directory>

    <Directory /cgi-bin/>
    # provide access to the local volume
	Options Indexes 
	AllowOverride None
	Require all granted
    </Directory>

</VirtualHost>

# obsolete knowledge
    #ErrorDocument 404 /error/error.domain.html
    # indien error document start met http dan worden de environment variables niet gezet.
    #ErrorDocument 404 http://data.vlaanderen.be:81/cgi-bin/error.sh?uri=%{escape:%{HTTP_REFERER}}
#    RewriteRule "^(.*)$" /ErrorPages/error.domain.html [R=404]  
#    RewriteRule "^(.*)$" /error/error.emptytype.html [E=errorUriScheme:1,R=404]
#    RewriteRule "^/(.*)$" http://data.vlaanderen.be:81/cgi-bin/error.sh?uri=$1 [R=303]

# manage the error messages
#    RewriteCond %{REQUEST_URI} "^/error/.*" 
#    RewriteRule "^/error/(.*)" /ErrorPages/$1 [L]
